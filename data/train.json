[
  {
    "question": "计算机网络中，TCP 和 UDP 的主要区别是什么？",
    "answer": "TCP 是面向连接的可靠传输协议，具有三次握手建立连接、重传机制、流量控制和拥塞控制等特性，适用于对可靠性要求高的场景（如文件传输）；UDP 是无连接的不可靠传输协议，没有复杂控制机制，传输速度快，适用于实时性要求高的场景（如视频通话）。"
  },
  {
    "question": "什么是函数式编程？它的核心思想是什么？",
    "answer": "函数式编程是一种编程范式，核心思想是将计算视为函数的组合，强调使用纯函数（无副作用、输入决定输出）和不可变数据。它避免状态变化和副作用，注重函数的声明式定义，常见特性包括高阶函数、递归和惰性求值。"
  },
  {
    "question": "数据库中的 ACID 特性指的是什么？",
    "answer": "ACID 是数据库事务的四大特性：原子性（Atomicity）指事务要么全部执行，要么全部不执行；一致性（Consistency）指事务执行前后数据库状态保持一致；隔离性（Isolation）指多个事务并发执行时互不干扰；持久性（Durability）指事务提交后修改永久保存。"
  },
  {
    "question": "前端开发中，Vue 的双向数据绑定原理是什么？",
    "answer": "Vue 的双向数据绑定基于数据劫持和发布-订阅模式。通过 Object.defineProperty() 拦截数据的 getter 和 setter，当数据变化时，触发依赖收集的Watcher 对象，通知视图更新；同时监听视图事件，将用户输入同步到数据，实现数据与视图的双向同步。"
  },
  {
    "question": "什么是容器化技术？Docker 的核心组件有哪些？",
    "answer": "容器化技术是一种轻量级虚拟化技术，通过隔离应用及其依赖，实现跨环境一致性部署。Docker 的核心组件包括：镜像（Image）是应用的可执行包；容器（Container）是镜像的运行实例；仓库（Repository）用于存储镜像；Docker Engine 是运行和管理容器的核心引擎。"
  }
]